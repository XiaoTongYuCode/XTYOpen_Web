{"version":3,"file":"js/882.d9773000.js","mappings":"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","sources":["webpack://wms-web/./src/components/Chat.vue","webpack://wms-web/src/components/Chat.vue","webpack://wms-web/./src/components/Chat.vue?9e41","webpack://wms-web/./src/components/Chat.vue?a146","webpack://wms-web/./src/components/ChatAll.vue","webpack://wms-web/src/components/ChatAll.vue","webpack://wms-web/./src/components/ChatAll.vue?2086","webpack://wms-web/./src/components/ChatAll.vue?264e","webpack://wms-web/./src/components/ChatMobile.vue","webpack://wms-web/src/components/ChatMobile.vue","webpack://wms-web/./src/components/ChatMobile.vue?36f0","webpack://wms-web/./src/components/ChatMobile.vue?2950"],"sourcesContent":["var render = function render(){var _vm=this,_c=_vm._self._c;return _c('div',[_c('el-row',{staticStyle:{\"display\":\"flex\",\"justify-content\":\"space-between\",\"min-height\":\"94vh\"}},[_c('el-col',{attrs:{\"span\":4}},[_c('el-card',{staticStyle:{\"height\":\"100%\",\"overflow-y\":\"auto\",\"color\":\"#333\"}},[_c('div',{staticStyle:{\"padding-bottom\":\"10px\",\"border-bottom\":\"1px solid #ccc\"}}),_c('el-button',{staticStyle:{\"width\":\"100%\",\"padding\":\"10px 0\",\"margin-top\":\"10px\"},attrs:{\"disabled\":true}},[_c('el-avatar',{staticStyle:{\"margin-right\":\"12px\"},attrs:{\"size\":40,\"src\":this.user.avatar}},[_vm._v(\"我\")]),_c('span',{staticStyle:{\"font-size\":\"1.1vw\",\"position\":\"relative\",\"top\":\"-12px\"}},[_vm._v(_vm._s(this.user.name))])],1),_vm._l((_vm.users.concat(_vm.usersHistory)),function(user){return _c('div',{key:user.username,staticStyle:{\"padding\":\"10px 0\",\"text-align\":\"center\"},on:{\"click\":function($event){return _vm.history(user.username)}}},[_c('el-badge',{staticStyle:{\"width\":\"100%\"},attrs:{\"value\":user.newMessage,\"max\":10,\"hidden\":user.newMessage===0}},[_c('el-button',{staticStyle:{\"width\":\"100%\"}},[_c('el-avatar',{staticStyle:{\"margin-right\":\"12px\"},attrs:{\"size\":40,\"src\":user.avatar}},[_vm._v(\" \"+_vm._s(user.username.charAt(0))+\" \")]),(user.username !== _vm.chatUser)?_c('span',{staticStyle:{\"font-size\":\"1.1vw\",\"position\":\"relative\",\"top\":\"-12px\"}},[_vm._v(_vm._s(user.name))]):_vm._e(),(user.username === _vm.chatUser)?_c('span',{staticStyle:{\"font-size\":\"1.1vw\",\"font-weight\":\"bold\",\"color\":\"limegreen\",\"position\":\"relative\",\"top\":\"-12px\"}},[_vm._v(_vm._s(user.name))]):_vm._e(),_c('el-tooltip',{staticClass:\"item\",attrs:{\"effect\":\"dark\",\"content\":\"在线用户\",\"placement\":\"right\"}},[(user.online===1)?_c('i',{staticClass:\"el-icon-connection el-icon--right\",staticStyle:{\"position\":\"relative\",\"top\":\"-12px\"}}):_vm._e()])],1)],1)],1)})],2)],1),_c('el-col',{attrs:{\"span\":24}},[_c('div',{staticStyle:{\"height\":\"100%\",\"display\":\"flex\",\"align-items\":\"center\",\"flex-direction\":\"column\"},style:({ 'background-image': 'url(' + this.chatBack + ')'})},[_c('div',{staticStyle:{\"text-align\":\"center\",\"line-height\":\"50px\",\"font-size\":\"large\",\"font-weight\":\"bold\",\"margin-bottom\":\"-20px\"}},[_vm._v(\" \"+_vm._s(_vm.chatUser?(_vm.chatUser): \"请选择用户\")+\" \")]),_c('el-divider'),_c('div',{ref:\"scrollDiv\",staticStyle:{\"height\":\"68vh\",\"width\":\"75%\",\"overflow\":\"auto\",\"margin-bottom\":\"10px\"},domProps:{\"innerHTML\":_vm._s(_vm.content)}}),_c('div',{staticStyle:{\"width\":\"100%\",\"display\":\"flex\",\"justify-items\":\"center\",\"justify-content\":\"center\"}},[_c('el-input',{staticStyle:{\"width\":\"35%\",\"font-size\":\"large\"},attrs:{\"autosize\":{ minRows: 2, maxRows: 3},\"placeholder\":\"请输入内容\",\"resize\":\"none\",\"show-word-limit\":\"\",\"type\":\"textarea\"},nativeOn:{\"keyup\":function($event){if(!$event.type.indexOf('key')&&_vm._k($event.keyCode,\"enter\",13,$event.key,\"Enter\"))return null;return _vm.send.apply(null, arguments)}},model:{value:(_vm.text),callback:function ($$v) {_vm.text=$$v},expression:\"text\"}}),_c('el-button',{staticClass:\"sendButton\",staticStyle:{\"font-size\":\"1em\",\"border-radius\":\"0 20px 20px 0\",\"box-shadow\":\"0 5px 20px 0 rgba(0, 0, 0, 0.3)\"},attrs:{\"size\":\"medium\",\"type\":\"primary\"},on:{\"click\":_vm.send}},[_vm._v(\"发送\")])],1)],1)])],1)],1)\n}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<!-- eslint-disable vue/multi-word-component-names -->\r\n<script>\r\n// import request from \"@/utils/request\";\r\nlet socket;\r\n\r\nexport default {\r\n  name: \"Chat\",\r\n  data() {\r\n    return {\r\n      circleUrl: 'https://cube.elemecdn.com/3/7c/3ea6beec64369c2642b92c6726f1epng.png',\r\n      chatBack: require('../assets/img/chatBack.jpg'),\r\n      user: JSON.parse(sessionStorage.getItem('CurUser')),\r\n      isCollapse: false,\r\n      users: [],\r\n      usersHistory: [],\r\n      historyChat: [],\r\n      chatUser: '',\r\n      text: \"\",\r\n      messages: [],\r\n      content: ''\r\n    }\r\n\r\n  },\r\n  beforeMount() {\r\n    this.user = JSON.parse(sessionStorage.getItem('CurUser'));\r\n  },\r\n  created() {\r\n    this.init();\r\n  },\r\n  methods: {\r\n    history(userNo){\r\n      this.chatUser = userNo;\r\n      this.content = '';\r\n      this.users.forEach(user=>{\r\n        if(user.username === userNo){\r\n          user.newMessage=0;\r\n        }\r\n      })\r\n\r\n      this.$axios.post(this.$httpUrl + '/message/history', {\r\n        pageSize: '',\r\n        pageNum: '',\r\n        param: {\r\n          user1: userNo,\r\n          user2: this.user.no\r\n        }\r\n      }).then(res => res.data).then(res => {\r\n        if (res.code === 200) {\r\n         this.historyChat = res.data;\r\n          this.historyChat.forEach((chatItem) => {\r\n            // 对每个 chatItem 执行操作\r\n            if(chatItem.fromNo === userNo){\r\n              this.createContent(chatItem.fromAvatar ? chatItem.fromAvatar : this.circleUrl\r\n                  , null, chatItem.content);\r\n            }\r\n            else {\r\n              this.createContent(null\r\n                  , this.user.avatar ? this.user.avatar : this.circleUrl, chatItem.content);\r\n            }\r\n          });\r\n        }\r\n      })\r\n    },\r\n    send() {\r\n      if (!this.chatUser) {\r\n        this.$message({type: 'warning', message: \"请选择左侧聊天对象\"})\r\n        return;\r\n      }\r\n      if (!this.text || this.text === \"\") {\r\n        this.$message({type: 'warning', message: \"请输入内容\"})\r\n      } else {\r\n        if (typeof (WebSocket) == \"undefined\") {\r\n          console.log(\"您的浏览器不支持WebSocket\");\r\n        } else {\r\n          console.log(\"您的浏览器支持WebSocket\");\r\n          // 组装待发送的消息 json\r\n          // {\"from\": \"zhang\", \"to\": \"admin\", \"text\": \"聊天文本\"}\r\n          let message = {from: this.user.no, to: this.chatUser, text: this.text}\r\n          socket.send(JSON.stringify(message));  // 将组装好的json发送给服务端，由服务端进行转发\r\n          this.messages.push({user: this.user.no, text: this.text})\r\n          // 构建消息内容，本人消息\r\n          this.createContent(null, this.user.avatar ? this.user.avatar : this.circleUrl, this.text)\r\n          this.text = '';\r\n        }\r\n      }\r\n    },\r\n    createContent(remoteUser, nowUser, text) {  // 这个方法是用来将 json的聊天消息数据转换成 html的。\r\n      let html\r\n      // 当前用户消息\r\n      if (nowUser) { // nowUser 表示是否显示当前用户发送的聊天消息，绿色气泡\r\n        html = \"<div class=\\\"el-row\\\" style=\\\"padding: 5px 0\\\">\\n\" +\r\n            \"  <div class=\\\"el-col el-col-22\\\" style=\\\"text-align: right; padding-right: 10px\\\">\\n\" +\r\n            \"    <div style=\\\"color: white; text-align: center; border-radius: 10px; font-family: sans-serif;\" +\r\n            \" padding: 10px; width:auto; max-width: 25vw; word-wrap: break-word; display:inline-block !important; box-shadow: 0 5px 20px 1px rgba(0, 0, 0, 0.3);\" +\r\n            \" background-color: forestgreen;\\\">\" + text + \"</div>\\n\" +\r\n            \"  </div>\\n\" +\r\n            \"  <div class=\\\"el-col el-col-2\\\">\\n\" +\r\n            \"  <span class=\\\"el-avatar el-avatar--circle\\\" style=\\\"height: 40px; width: 40px; line-height: 40px;\\\">\\n\" +\r\n            \"    <img src=\\\"\" + nowUser + \"\\\" style=\\\"object-fit: cover;\\\">\\n\" +\r\n            \"  </span>\\n\" +\r\n            \"  </div>\\n\" +\r\n            \"</div>\";\r\n      } else if (remoteUser) {   // remoteUser表示远程用户聊天消息，蓝色的气泡\r\n        html = \"<div class=\\\"el-row\\\" style=\\\"padding: 5px 0\\\">\\n\" +\r\n            \"  <div class=\\\"el-col el-col-2\\\" style=\\\"text-align: right\\\">\\n\" +\r\n            \"  <span class=\\\"el-avatar el-avatar--circle\\\" style=\\\"height: 40px; width: 40px; line-height: 40px;\\\">\\n\" +\r\n            \"    <img src=\\\"\" + remoteUser + \"\\\" style=\\\"object-fit: cover;\\\">\\n\" +\r\n            \"  </span>\\n\" +\r\n            \"  </div>\\n\" +\r\n            \"  <div class=\\\"el-col el-col-22\\\" style=\\\" text-align: left; padding-left: 10px\\\">\\n\" +\r\n            \"    <div style=\\\"color: white; text-align: center; border-radius: 10px; font-family: sans-serif;\" +\r\n            \" padding: 10px; width:auto; max-width: 25vw; word-wrap: break-word; display:inline-block !important; box-shadow: 0 5px 20px 1px rgba(0, 0, 0, 0.3);\" +\r\n            \" background-color: deepskyblue;\\\">\" + text + \"</div>\\n\" +\r\n            \"  </div>\\n\" +\r\n            \"</div>\";\r\n      }\r\n      this.content += html;\r\n      //下两行为滚动scrollDiv(refs上)到最下面\r\n      this.$nextTick(() => {\r\n        const container = this.$refs.scrollDiv;\r\n        container.scrollTop = container.scrollHeight;\r\n      });\r\n    },\r\n    init() {\r\n      let username = this.user.no;\r\n      console.log(\"当前用户：\" + username);\r\n      let _this = this;\r\n      if (typeof (WebSocket) == \"undefined\") {\r\n        console.log(\"您的浏览器不支持WebSocket\");\r\n      } else {\r\n        console.log(\"您的浏览器支持WebSocket\");\r\n        let socketUrl = \"wss://\" + this.$httpUrl.replace(\"https://\", \"\").replace(/\\s/g, \"\") + \"/imserver/\" + username;\r\n        if (socket != null) {\r\n          socket.close();\r\n          socket = null;\r\n        }\r\n        // 开启一个websocket服务\r\n        socket = new WebSocket(socketUrl);\r\n        //打开事件\r\n        socket.onopen = function () {\r\n          console.log(\"websocket已打开\");\r\n        };\r\n        //  浏览器端收消息，获得从服务端发送过来的文本消息\r\n        socket.onmessage = function (msg) {\r\n          let data = JSON.parse(msg.data)  // 对收到的json数据进行解析， 类似这样的： {\"users\": [{\"username\": \"zhang\"},{ \"username\": \"admin\"}]}\r\n          if (data.users) {  // 获取在线人员信息\r\n            _this.users = data.users.filter(user => user.username !== username) // 获取当前连接的所有用户信息，并且排除自身，自己不会出现在自己的聊天列表里\r\n          }\r\n          if(data.usersHistory){\r\n            _this.usersHistory = data.usersHistory\r\n            if (!_this.chatUser && data.users.length > 1) _this.history(data.users.filter(user => user.username !== username)[0].username);\r\n          }\r\n          if (!data.users) {\r\n            // 如果服务器端发送过来的json数据 不包含 users 这个key，那么发送过来的就是聊天文本json数据\r\n            //  // {\"from\": \"zhang\", \"text\": \"hello\"}\r\n            if (data.from === _this.chatUser) {\r\n              _this.messages.push(data)\r\n              // 构建消息内容\r\n              _this.createContent(data.avatar ? data.avatar : \"https://cube.elemecdn.com/3/7c/3ea6beec64369c2642b92c6726f1epng.png\", null, data.text)\r\n            }\r\n            else {\r\n              _this.users.forEach(user=>{\r\n                if(user.username === data.from){\r\n                  user.newMessage+=1;\r\n                }\r\n              });\r\n            }\r\n          }\r\n        };\r\n        //关闭事件\r\n        socket.onclose = function () {\r\n          console.log(\"websocket已关闭\");\r\n        };\r\n        //发生了错误事件\r\n        socket.onerror = function () {\r\n          console.log(\"websocket发生了错误\");\r\n        }\r\n      }\r\n    },\r\n\r\n  },\r\n\r\n\r\n}\r\n\r\n</script>\r\n\r\n<template>\r\n    <div>\r\n      <el-row style=\"display: flex; justify-content: space-between; min-height: 94vh;\">\r\n        <el-col :span=\"4\">\r\n          <el-card style=\" height: 100%; overflow-y: auto; color: #333\">\r\n            <div style=\"padding-bottom: 10px; border-bottom: 1px solid #ccc\">\r\n            </div>\r\n            <el-button style=\"width: 100%; padding: 10px 0;margin-top: 10px;\" :disabled=\"true\">\r\n              <el-avatar :size=\"40\" :src=\"this.user.avatar\" style=\"margin-right: 12px;\">我</el-avatar>\r\n              <span style=\"font-size: 1.1vw; position:relative; top: -12px;\">{{ this.user.name }}</span>\r\n            </el-button>\r\n            <div v-for=\"user in users.concat(usersHistory)\" :key=\"user.username\" style=\"padding: 10px 0; text-align: center;\" @click=\"history(user.username)\">\r\n<!--              badge新消息气泡-->\r\n              <el-badge :value=\"user.newMessage\" :max=\"10\" :hidden=\"user.newMessage===0\" style=\"width: 100%;\">\r\n                <el-button style=\"width: 100%;\">\r\n                  <el-avatar :size=\"40\" :src=\"user.avatar\" style=\"margin-right: 12px;\">\r\n                    {{ user.username.charAt(0) }}\r\n                  </el-avatar>\r\n                  <span v-if=\"user.username !== chatUser\" style=\"font-size: 1.1vw; position:relative; top: -12px;\">{{ user.name }}</span>\r\n                  <span v-if=\"user.username === chatUser\" style=\"font-size: 1.1vw; font-weight: bold; color: limegreen; position:relative; top: -12px;\">{{ user.name }}</span>\r\n                  <el-tooltip class=\"item\" effect=\"dark\" content=\"在线用户\" placement=\"right\">\r\n                    <i v-if=\"user.online===1\" class=\"el-icon-connection el-icon--right\" style=\"position: relative; top: -12px;\"></i>\r\n                  </el-tooltip>\r\n                </el-button>\r\n              </el-badge>\r\n            </div>\r\n          </el-card>\r\n        </el-col>\r\n\r\n        <el-col :span=\"24\">\r\n          <div :style=\"{ 'background-image': 'url(' + this.chatBack + ')'}\" style=\"height: 100%;display: flex; align-items: center; flex-direction: column;\">\r\n            <div style=\"text-align: center; line-height: 50px; font-size: large; font-weight: bold; margin-bottom: -20px;\">\r\n              {{ chatUser?(chatUser): \"请选择用户\" }}\r\n            </div>\r\n            <el-divider></el-divider>\r\n<!--            :style=\"{ 'background-image': 'url(' + this.chatBack + ')'}\"-->\r\n            <div ref=\"scrollDiv\" style=\"height: 68vh; width: 75%; overflow:auto; margin-bottom: 10px;\"\r\n                 v-html=\"content\"></div>\r\n            <div style=\"width: 100%; display: flex; justify-items: center; justify-content: center;\">\r\n              <el-input v-model=\"text\" :autosize=\"{ minRows: 2, maxRows: 3}\" placeholder=\"请输入内容\" resize=\"none\"\r\n                        show-word-limit\r\n                        style=\"width: 35%;font-size: large;\"\r\n                        type=\"textarea\" @keyup.enter.native=\"send\"></el-input>\r\n              <el-button size=\"medium\" type=\"primary\" class=\"sendButton\" @click=\"send\" style=\"font-size: 1em; border-radius: 0 20px 20px 0; box-shadow: 0 5px 20px 0 rgba(0, 0, 0, 0.3);\">发送</el-button>\r\n            </div>\r\n          </div>\r\n        </el-col>\r\n      </el-row>\r\n    </div>\r\n</template>\r\n\r\n<style scoped>\r\n*{\r\n  ::-webkit-scrollbar {\r\n    /*隐藏滚轮*/\r\n    display: none;\r\n  }\r\n}\r\n.sendButton{\r\n  box-shadow: 0 2px 12px 0 rgba(70, 65, 65, 0.1);\r\n  transition: 0.3s;\r\n}\r\n.sendButton:hover{\r\n  box-shadow: 0 0 20px #009dff,\r\n  0 0 40px #3fbaff,\r\n  0 0 80px #78cbff,\r\n  0 0 120px #97d5ff;\r\n  font-weight: bold;\r\n}\r\n\r\n</style>","import mod from \"-!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js??clonedRuleSet-40.use[1]!../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./Chat.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js??clonedRuleSet-40.use[1]!../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./Chat.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./Chat.vue?vue&type=template&id=22669f10&scoped=true&\"\nimport script from \"./Chat.vue?vue&type=script&lang=js&\"\nexport * from \"./Chat.vue?vue&type=script&lang=js&\"\nimport style0 from \"./Chat.vue?vue&type=style&index=0&id=22669f10&prod&scoped=true&lang=css&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/@vue/vue-loader-v15/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"22669f10\",\n  null\n  \n)\n\nexport default component.exports","var render = function render(){var _vm=this,_c=_vm._self._c;return _c('div',[(!_vm.isMobile)?_c('Chat'):_vm._e(),(_vm.isMobile)?_c('ChatMobile'):_vm._e()],1)\n}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<!-- eslint-disable vue/multi-word-component-names -->\r\n<script>\r\nimport Chat from \"@/components/Chat.vue\";\r\nimport ChatMobile from \"@/components/ChatMobile.vue\";\r\n\r\nexport default {\r\n  name: \"ChatAll\",\r\n  components: {ChatMobile, Chat},\r\n  data(){\r\n    return{\r\n      isMobile: false, //手机端\r\n    }\r\n  },\r\n  methods:{\r\n    //检查手机\r\n    checkIfMobile() {\r\n      this.isMobile = window.innerWidth < 800; // Adjust the value based on your requirements\r\n    },\r\n  },\r\n\r\n  mounted(){\r\n    this.checkIfMobile();\r\n  },\r\n}\r\n</script>\r\n\r\n<template>\r\n<div>\r\n  <Chat v-if=\"!isMobile\"></Chat>\r\n  <ChatMobile v-if=\"isMobile\"></ChatMobile>\r\n</div>\r\n</template>\r\n\r\n<style scoped>\r\n\r\n</style>","import mod from \"-!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js??clonedRuleSet-40.use[1]!../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./ChatAll.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js??clonedRuleSet-40.use[1]!../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./ChatAll.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./ChatAll.vue?vue&type=template&id=46436ae4&scoped=true&\"\nimport script from \"./ChatAll.vue?vue&type=script&lang=js&\"\nexport * from \"./ChatAll.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/@vue/vue-loader-v15/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"46436ae4\",\n  null\n  \n)\n\nexport default component.exports","var render = function render(){var _vm=this,_c=_vm._self._c;return _c('div',[_c('el-row',{staticStyle:{\"display\":\"flex\",\"justify-content\":\"space-between\",\"height\":\"calc(100vh - 70px)\"}},[_c('el-col',{staticStyle:{\"margin-right\":\"5px\"},attrs:{\"span\":4}},[_c('el-card',{staticStyle:{\"height\":\"100%\",\"background-color\":\"#f3f3f3\",\"overflow-y\":\"auto\",\"color\":\"#333\"}},[_c('div',{staticStyle:{\"text-align\":\"center\"}},[_c('el-avatar',{attrs:{\"size\":40,\"src\":this.user.avatar}},[_vm._v(\"我\")])],1),_vm._l((_vm.users),function(user){return _c('div',{key:user.username,staticStyle:{\"padding\":\"5px 0\",\"text-align\":\"center\"},on:{\"click\":function($event){return _vm.history(user.username)}}},[_c('el-badge',{staticStyle:{\"width\":\"100%\"},attrs:{\"value\":user.newMessage,\"max\":10,\"hidden\":user.newMessage===0}},[_c('el-avatar',{attrs:{\"size\":40,\"src\":user.avatar}},[_vm._v(\" \"+_vm._s(user.username.charAt(0))+\" \")])],1)],1)})],2)],1),_c('el-col',{attrs:{\"span\":24}},[_c('div',{staticStyle:{\"height\":\"100%\",\"display\":\"flex\",\"align-items\":\"center\",\"flex-direction\":\"column\"}},[_c('div',{staticStyle:{\"text-align\":\"center\",\"line-height\":\"30px\",\"font-size\":\"large\",\"font-weight\":\"bold\",\"margin-bottom\":\"10px\"}},[_vm._v(\" \"+_vm._s(_vm.chatUser?(_vm.chatUser): \"请选择用户\")+\" \")]),_c('div',{ref:\"scrollDiv\",staticStyle:{\"height\":\"68vh\",\"width\":\"100%\",\"overflow\":\"auto\",\"margin-bottom\":\"10px\"},domProps:{\"innerHTML\":_vm._s(_vm.content)}}),_c('div',{staticStyle:{\"position\":\"fixed\",\"bottom\":\"30px\"}},[_c('div',{staticStyle:{\"width\":\"100%\",\"display\":\"flex\",\"justify-items\":\"center\",\"justify-content\":\"center\"}},[_c('el-input',{staticStyle:{\"width\":\"70%\",\"font-size\":\"medium\"},attrs:{\"autosize\":{ minRows: 2, maxRows: 3},\"placeholder\":\"消息\",\"resize\":\"none\",\"show-word-limit\":\"\",\"type\":\"textarea\"},nativeOn:{\"keyup\":function($event){if(!$event.type.indexOf('key')&&_vm._k($event.keyCode,\"enter\",13,$event.key,\"Enter\"))return null;return _vm.send.apply(null, arguments)}},model:{value:(_vm.text),callback:function ($$v) {_vm.text=$$v},expression:\"text\"}}),_c('el-button',{staticClass:\"sendButton\",staticStyle:{\"font-size\":\"1em\",\"border-radius\":\"0 20px 20px 0\",\"box-shadow\":\"0 5px 20px 0 rgba(0, 0, 0, 0.3)\"},attrs:{\"size\":\"mini\",\"type\":\"primary\"},on:{\"click\":_vm.send}},[_vm._v(\"发送\")])],1)])])])],1)],1)\n}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<!-- eslint-disable vue/multi-word-component-names -->\r\n<script>\r\n// import request from \"@/utils/request\";\r\nlet socket;\r\n\r\nexport default {\r\n  name: \"ChatMobile\",\r\n  data() {\r\n    return {\r\n      circleUrl: 'https://cube.elemecdn.com/3/7c/3ea6beec64369c2642b92c6726f1epng.png',\r\n      chatBack: require('../assets/img/chatBack.jpg'),\r\n      user: JSON.parse(sessionStorage.getItem('CurUser')),\r\n      isCollapse: false,\r\n      users: [],\r\n      historyChat: [],\r\n      chatUser: '',\r\n      text: \"\",\r\n      messages: [],\r\n      content: ''\r\n    }\r\n\r\n  },\r\n  beforeMount() {\r\n    this.user = JSON.parse(sessionStorage.getItem('CurUser'));\r\n  },\r\n  created() {\r\n    this.init();\r\n  },\r\n  methods: {\r\n    history(userNo){\r\n      this.chatUser = userNo;\r\n      this.content = '';\r\n      this.users.forEach(user=>{\r\n        if(user.username === userNo){\r\n          user.newMessage=0;\r\n        }\r\n      })\r\n\r\n      this.$axios.post(this.$httpUrl + '/message/history', {\r\n        pageSize: '',\r\n        pageNum: '',\r\n        param: {\r\n          user1: userNo,\r\n          user2: this.user.no\r\n        }\r\n      }).then(res => res.data).then(res => {\r\n        if (res.code === 200) {\r\n         this.historyChat = res.data;\r\n          this.historyChat.forEach((chatItem) => {\r\n            // 对每个 chatItem 执行操作\r\n            if(chatItem.fromNo === userNo){\r\n              this.createContent(chatItem.fromAvatar ? chatItem.fromAvatar : this.circleUrl\r\n                  , null, chatItem.content);\r\n            }\r\n            else {\r\n              this.createContent(null\r\n                  , this.user.avatar ? this.user.avatar : this.circleUrl, chatItem.content);\r\n            }\r\n          });\r\n        }\r\n      })\r\n    },\r\n    send() {\r\n      if (!this.chatUser) {\r\n        this.$message({type: 'warning', message: \"请选择左侧聊天对象\"})\r\n        return;\r\n      }\r\n      if (!this.text || this.text === \"\") {\r\n        this.$message({type: 'warning', message: \"请输入内容\"})\r\n      } else {\r\n        if (typeof (WebSocket) == \"undefined\") {\r\n          console.log(\"您的浏览器不支持WebSocket\");\r\n        } else {\r\n          console.log(\"您的浏览器支持WebSocket\");\r\n          // 组装待发送的消息 json\r\n          // {\"from\": \"zhang\", \"to\": \"admin\", \"text\": \"聊天文本\"}\r\n          let message = {from: this.user.no, to: this.chatUser, text: this.text}\r\n          socket.send(JSON.stringify(message));  // 将组装好的json发送给服务端，由服务端进行转发\r\n          this.messages.push({user: this.user.no, text: this.text})\r\n          // 构建消息内容，本人消息\r\n          this.createContent(null, this.user.avatar ? this.user.avatar : this.circleUrl, this.text)\r\n          this.text = '';\r\n        }\r\n      }\r\n    },\r\n    createContent(remoteUser, nowUser, text) {  // 这个方法是用来将 json的聊天消息数据转换成 html的。\r\n      let html\r\n      // 当前用户消息\r\n      if (nowUser) { // nowUser 表示是否显示当前用户发送的聊天消息，绿色气泡\r\n        html = \"<div class=\\\"el-row\\\" style=\\\"padding: 5px 0; margin-right: 5px;\\\">\\n\" +\r\n            \"  <div class=\\\"el-col el-col-22\\\" style=\\\"text-align: right; padding-right: 5px\\\">\\n\" +\r\n            \"    <div style=\\\"color: white; text-align: center; border-radius: 10px; font-family: sans-serif;\" +\r\n            \" padding: 5px; width:auto; max-width: 50vw; word-wrap: break-word; display:inline-block !important; box-shadow: 0 5px 20px 1px rgba(0, 0, 0, 0.3);\" +\r\n            \" background-color: forestgreen;\\\">\" + text + \"</div>\\n\" +\r\n            \"  </div>\\n\" +\r\n            \"  <div class=\\\"el-col el-col-2\\\">\\n\" +\r\n            \"  <span class=\\\"el-avatar el-avatar--circle\\\" style=\\\"height: 30px; width: 30px; line-height: 40px;\\\">\\n\" +\r\n            \"    <img src=\\\"\" + nowUser + \"\\\" style=\\\"object-fit: cover;\\\">\\n\" +\r\n            \"  </span>\\n\" +\r\n            \"  </div>\\n\" +\r\n            \"</div>\";\r\n      } else if (remoteUser) {   // remoteUser表示远程用户聊天消息，蓝色的气泡\r\n        html = \"<div class=\\\"el-row\\\" style=\\\"padding: 5px 0;\\\">\\n\" +\r\n            \"  <div class=\\\"el-col el-col-2\\\" style=\\\"text-align: right\\\">\\n\" +\r\n            \"  <span class=\\\"el-avatar el-avatar--circle\\\" style=\\\"height: 30px; width: 30px; line-height: 40px;\\\">\\n\" +\r\n            \"    <img src=\\\"\" + remoteUser + \"\\\" style=\\\"object-fit: cover;\\\">\\n\" +\r\n            \"  </span>\\n\" +\r\n            \"  </div>\\n\" +\r\n            \"  <div class=\\\"el-col el-col-22\\\" style=\\\" text-align: left; padding-left: 10px\\\">\\n\" +\r\n            \"    <div style=\\\"color: white; text-align: center; border-radius: 10px; font-family: sans-serif;\" +\r\n            \" padding: 5px; width:auto; max-width: 50vw; word-wrap: break-word; display:inline-block !important; box-shadow: 0 5px 20px 1px rgba(0, 0, 0, 0.3);\" +\r\n            \" background-color: deepskyblue;\\\">\" + text + \"</div>\\n\" +\r\n            \"  </div>\\n\" +\r\n            \"</div>\";\r\n      }\r\n      this.content += html;\r\n      //下两行为滚动scrollDiv(refs上)到最下面\r\n      this.$nextTick(() => {\r\n        const container = this.$refs.scrollDiv;\r\n        container.scrollTop = container.scrollHeight;\r\n      });\r\n    },\r\n    init() {\r\n      let username = this.user.no;\r\n      console.log(\"当前用户：\" + username);\r\n      let _this = this;\r\n      if (typeof (WebSocket) == \"undefined\") {\r\n        console.log(\"您的浏览器不支持WebSocket\");\r\n      } else {\r\n        console.log(\"您的浏览器支持WebSocket\");\r\n        let socketUrl = \"wss://\" + this.$httpUrl.replace(\"https://\", \"\").replace(/\\s/g, \"\") + \"/imserver/\" + username;\r\n        if (socket != null) {\r\n          socket.close();\r\n          socket = null;\r\n        }\r\n        // 开启一个websocket服务\r\n        socket = new WebSocket(socketUrl);\r\n        //打开事件\r\n        socket.onopen = function () {\r\n          console.log(\"websocket已打开\");\r\n        };\r\n        //  浏览器端收消息，获得从服务端发送过来的文本消息\r\n        socket.onmessage = function (msg) {\r\n          console.log(\"收到数据====\" + msg.data)\r\n          let data = JSON.parse(msg.data)  // 对收到的json数据进行解析， 类似这样的： {\"users\": [{\"username\": \"zhang\"},{ \"username\": \"admin\"}]}\r\n          if (data.users) {  // 获取在线人员信息\r\n            _this.users = data.users.filter(user => user.username !== username) // 获取当前连接的所有用户信息，并且排除自身，自己不会出现在自己的聊天列表里\r\n            if (!_this.chatUser && data.users.length > 1) _this.history(data.users.filter(user => user.username !== username)[0].username);\r\n          } else {\r\n            // 如果服务器端发送过来的json数据 不包含 users 这个key，那么发送过来的就是聊天文本json数据\r\n            //  // {\"from\": \"zhang\", \"text\": \"hello\"}\r\n            if (data.from === _this.chatUser) {\r\n              _this.messages.push(data)\r\n              // 构建消息内容\r\n              _this.createContent(data.avatar ? data.avatar : \"https://cube.elemecdn.com/3/7c/3ea6beec64369c2642b92c6726f1epng.png\", null, data.text)\r\n            }\r\n            else {\r\n              _this.users.forEach(user=>{\r\n                if(user.username === data.from){\r\n                  user.newMessage+=1;\r\n                }\r\n              });\r\n            }\r\n          }\r\n        };\r\n        //关闭事件\r\n        socket.onclose = function () {\r\n          console.log(\"websocket已关闭\");\r\n        };\r\n        //发生了错误事件\r\n        socket.onerror = function () {\r\n          console.log(\"websocket发生了错误\");\r\n        }\r\n      }\r\n    },\r\n\r\n  },\r\n\r\n\r\n}\r\n\r\n</script>\r\n\r\n<template>\r\n    <div>\r\n      <el-row style=\"display: flex; justify-content: space-between; height: calc(100vh - 70px);\">\r\n        <el-col :span=\"4\" style=\"margin-right: 5px;\">\r\n          <el-card style=\"height: 100%; background-color: #f3f3f3; overflow-y: auto; color: #333\">\r\n            <div style=\"text-align: center;\">\r\n              <el-avatar :size=\"40\" :src=\"this.user.avatar\">我</el-avatar>\r\n            </div>\r\n            <div v-for=\"user in users\" :key=\"user.username\" style=\"padding: 5px 0; text-align: center;\" @click=\"history(user.username)\">\r\n<!--              badge新消息气泡-->\r\n              <el-badge :value=\"user.newMessage\" :max=\"10\" :hidden=\"user.newMessage===0\" style=\"width: 100%;\">\r\n                <el-avatar :size=\"40\" :src=\"user.avatar\" >\r\n                  {{ user.username.charAt(0) }}\r\n                </el-avatar>\r\n              </el-badge>\r\n            </div>\r\n          </el-card>\r\n        </el-col>\r\n\r\n        <el-col :span=\"24\">\r\n          <div style=\"height: 100%; display: flex; align-items: center; flex-direction: column;\">\r\n            <div style=\"text-align: center; line-height: 30px; font-size: large; font-weight: bold; margin-bottom: 10px;\">\r\n              {{ chatUser?(chatUser): \"请选择用户\" }}\r\n            </div>\r\n<!--            :style=\"{ 'background-image': 'url(' + this.chatBack + ')'}\"-->\r\n            <div ref=\"scrollDiv\" style=\"height: 68vh; width: 100%; overflow:auto; margin-bottom: 10px;\"\r\n                 v-html=\"content\"></div>\r\n            <div style=\"position: fixed;bottom: 30px;\">\r\n              <div style=\"width: 100%; display: flex; justify-items: center; justify-content: center;\">\r\n                <el-input v-model=\"text\" :autosize=\"{ minRows: 2, maxRows: 3}\" placeholder=\"消息\" resize=\"none\"\r\n                          show-word-limit\r\n                          style=\"width: 70%;font-size: medium;\"\r\n                          type=\"textarea\" @keyup.enter.native=\"send\"></el-input>\r\n                <el-button size=\"mini\" type=\"primary\" class=\"sendButton\" @click=\"send\" style=\"font-size: 1em; border-radius: 0 20px 20px 0; box-shadow: 0 5px 20px 0 rgba(0, 0, 0, 0.3);\">发送</el-button>\r\n              </div>\r\n            </div>\r\n\r\n          </div>\r\n        </el-col>\r\n      </el-row>\r\n    </div>\r\n</template>\r\n\r\n<style scoped>\r\n*{\r\n  ::-webkit-scrollbar {\r\n    /*隐藏滚轮*/\r\n    display: none;\r\n  }\r\n}\r\n.sendButton{\r\n  box-shadow: 0 2px 12px 0 rgba(70, 65, 65, 0.1);\r\n  transition: 0.3s;\r\n}\r\n.sendButton:hover{\r\n  box-shadow: 0 0 20px #009dff,\r\n  0 0 40px #3fbaff,\r\n  0 0 80px #78cbff,\r\n  0 0 120px #97d5ff;\r\n  font-weight: bold;\r\n}\r\n\r\n/deep/ .el-card__body{\r\n  padding: 10px;\r\n}\r\n\r\n</style>","import mod from \"-!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js??clonedRuleSet-40.use[1]!../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./ChatMobile.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js??clonedRuleSet-40.use[1]!../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./ChatMobile.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./ChatMobile.vue?vue&type=template&id=471bdf6e&scoped=true&\"\nimport script from \"./ChatMobile.vue?vue&type=script&lang=js&\"\nexport * from \"./ChatMobile.vue?vue&type=script&lang=js&\"\nimport style0 from \"./ChatMobile.vue?vue&type=style&index=0&id=471bdf6e&prod&scoped=true&lang=css&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/@vue/vue-loader-v15/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"471bdf6e\",\n  null\n  \n)\n\nexport default component.exports"],"names":["render","_vm","this","_c","_self","staticStyle","attrs","user","avatar","_v","_s","name","_l","users","concat","usersHistory","key","username","on","$event","history","newMessage","charAt","chatUser","_e","staticClass","online","style","chatBack","ref","domProps","content","minRows","maxRows","nativeOn","type","indexOf","_k","keyCode","send","apply","arguments","model","value","text","callback","$$v","expression","staticRenderFns","socket","data","circleUrl","require","JSON","parse","sessionStorage","getItem","isCollapse","historyChat","messages","beforeMount","created","init","methods","userNo","forEach","$axios","post","$httpUrl","pageSize","pageNum","param","user1","user2","no","then","res","code","chatItem","fromNo","createContent","fromAvatar","WebSocket","console","log","message","from","to","stringify","push","$message","remoteUser","nowUser","html","$nextTick","container","$refs","scrollDiv","scrollTop","scrollHeight","_this","socketUrl","replace","close","onopen","onmessage","msg","filter","length","onclose","onerror","component","isMobile","components","ChatMobile","Chat","checkIfMobile","window","innerWidth","mounted"],"sourceRoot":""}